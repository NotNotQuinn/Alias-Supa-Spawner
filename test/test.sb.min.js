/*! Created using 'Alias Supa Spawner', Powered by UglifyJS */
const ASS_Entry=function(){'use strict';const invocation='test';if(!args)return`Please use this code with the 'function:\u{22}code\u{22}' syntax.`;const commands=[{Names:['help'],Exec:context=>{const{Invocation,Args:[identifier]}=context;if(identifier===void 0)return`Availible sub-commands: ${commands.map(cmd=>cmd.Names[0]).join(', ')}; Also: try $$${invocation} help help`;let command=commands.find(i=>i.Names.includes(identifier));if(command){let aliases=command.Names.slice(1).join(', ');return`Help for \u{22}${command.Names[0]}\u{22}${aliases!==''?` (${aliases})`:''}: `+`${command.helpTexts.basic}; Usage: $$${invocation} ${command.Names[0]} ${command.helpTexts.useage}`}return`Command not found \u{22}${identifier}\u{22}. Availible sub-commands: ${commands.map(cmd=>cmd.Names[0]).join(', ')}`},helpTexts:{basic:'Shows help for commands, or a list of sub-commands',useage:'(command-name)'}},{Names:['ping'],Exec:context=>{return`Pong! This command is not a stand-alone bot but whatever.`}}];let error_msg=`Sub-command \u{22}${args[0]}}\u{22} not found.`;if(args[0]===void 0)error_msg=`No sub-command provided.`;let command=commands.find(i=>i.Names.includes(args[0]));if(!command)return`${error_msg} Try: ${commands.map(cmd=>cmd.Names[0]).join(', ')}; OR: \u{22}$$${invocation} help (sub-command)\u{22} for more information.`;if(Math.floor(Math.random()*5)>5)return'loool trolled';return command.Exec({Invocation:args[0],Args:args.slice(1)})};ASS_Entry();